{
  "swagger": "2.0",
  "info": {
    "title": "playground-apps/services.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/apps/list": {
      "get": {
        "summary": "List returns a subset of applications found in the user cluster.",
        "operationId": "Apps_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/playground_appsAppListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "environment_qualified_name",
            "description": "EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as\n\u003caccount_name\u003e/\u003cenv_name\u003e.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_id",
            "description": "AccountId with the account identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment_id",
            "description": "EnvironmentId with the environment identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Apps"
        ]
      }
    }
  },
  "definitions": {
    "playground_appsAppListResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_appsApplication"
          },
          "description": "Entries in the returned page."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "description": "From indicates the index of the first entry returned."
        },
        "to": {
          "type": "integer",
          "format": "int32",
          "description": "To indicates the index of the second entry returned."
        }
      },
      "description": "AppListResponse with a subset of applications."
    },
    "playground_appsAppStatus": {
      "type": "string",
      "enum": [
        "APP_OK",
        "APP_WARNING",
        "APP_ERROR"
      ],
      "default": "APP_OK",
      "description": "AppStatus defines the status of an application.\n\n - APP_OK: AppOk signals that are elements of a given application are running.\n - APP_WARNING: AppWarning signals that some of the elements of an application are not running.\n - APP_ERROR: AppError signals that the application is on an error state."
    },
    "playground_appsApplication": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string",
          "description": "AppId with the application identifier."
        },
        "name": {
          "type": "string",
          "description": "Name of the app."
        },
        "visual_id": {
          "type": "string",
          "description": "VisualId contains a hash unique to the instance for representation purposes."
        },
        "status": {
          "$ref": "#/definitions/playground_appsAppStatus",
          "description": "Status with the name of the overall status of the application."
        },
        "description": {
          "type": "string",
          "description": "Description of the application."
        },
        "version": {
          "type": "string",
          "title": "Version of the application"
        },
        "component_status": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/playground_appsComponentStatus"
          },
          "description": "ComponentStatus with a map of the associated component status."
        },
        "instance": {
          "$ref": "#/definitions/playground_oamApplicationConfiguration",
          "description": "Instance of the linked application configuration."
        },
        "status_name": {
          "type": "string",
          "description": "StatusName with the string representation of the status enum."
        },
        "component_status_name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "ComponentStatusName with the string representation of the component status."
        },
        "component_ingresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/playground_appsIngressList"
          },
          "description": "ComponentIngresses with a map associating component name with the list of associated ingresses."
        },
        "error_messages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ErrorMessages with all the error messages in case of application status is error"
        }
      },
      "description": "Application top level entity."
    },
    "playground_appsComponentStatus": {
      "type": "string",
      "enum": [
        "OK",
        "WARNING",
        "ERROR"
      ],
      "default": "OK",
      "description": "ComponentStatus defines the status of a component associated with an application configuration.\n\n - OK: OK signals that all the replicas of the component are running. Notice that the number of replicas may be\nspecified in a trait.\n - WARNING: WARNING signals that some of the replicas of the component are running but some remain. This could mean that either\nthe replicas are being launched, or an error prevents the creation of the required replicas.\n - ERROR: ERROR signals that there has been an error on a component."
    },
    "playground_appsIngressInfo": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL where the application is accessible."
        }
      },
      "description": "IngressInfo with the relevant information about an ingress."
    },
    "playground_appsIngressList": {
      "type": "object",
      "properties": {
        "parent_component_name": {
          "type": "string",
          "description": "ParentComponentName with the name of the component the ingress is attached to."
        },
        "ingresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_appsIngressInfo"
          },
          "description": "Ingresses with the list of ingresses."
        }
      },
      "description": "IngressList with a list of ingresses."
    },
    "playground_oamApplicationComponent": {
      "type": "object",
      "properties": {
        "component_name": {
          "type": "string",
          "description": "ComponentName specifies a component whose latest revision will be bind with ApplicationConfiguration. When the spec of the referenced component changes, ApplicationConfiguration will automatically migrate all trait affect from the prior revision to the new one. This is mutually exclusive with RevisionName."
        },
        "parameter_values": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "ParameterValues specify values for the the specified component's parameters. Any parameter required by the component must be specified."
        },
        "component_summary": {
          "$ref": "#/definitions/playground_oamComponentSummary",
          "title": "ComponentSummary with the summary of the components"
        },
        "scopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_oamApplicationScope"
          },
          "description": "Scopes in which the specified component should exist."
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_oamApplicationTrait"
          },
          "description": "Traits of the specified component."
        }
      },
      "description": "ApplicationComponent defines a component associated with an application configuration."
    },
    "playground_oamApplicationConfiguration": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "ApiVersion of the given application configuration."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the application configuration."
        },
        "metadata": {
          "$ref": "#/definitions/playground_oamMetadata",
          "description": "Metadata associated with the application configuration."
        },
        "spec": {
          "$ref": "#/definitions/playground_oamApplicationConfigurationSpec",
          "description": "Spec of the application configuration."
        }
      },
      "description": "ApplicationConfiguration entity describing the components that form an application."
    },
    "playground_oamApplicationConfigurationSpec": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/playground_oamApplicationComponent"
          },
          "description": "Components associated with the application."
        }
      },
      "description": "ApplicationConfigurationSpec with the specification of the application configuration."
    },
    "playground_oamApplicationScope": {
      "type": "object",
      "properties": {
        "scope_ref": {
          "$ref": "#/definitions/playground_oamApplicationScopeReference",
          "description": "ScopeRef must refer to an OAM scope resource."
        }
      },
      "description": "ApplicationScope specifies a scope in which a component should exist."
    },
    "playground_oamApplicationScopeReference": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "ApiVersion of the given scope. This field is mandatory."
        },
        "kind": {
          "type": "string",
          "description": "Kind of the scope. This field is mandatory."
        },
        "name": {
          "type": "string",
          "description": "Name of the scope. This field is mandatory."
        },
        "uid": {
          "type": "string",
          "description": "Uid of the scope. This field is optional."
        }
      },
      "description": "ApplicationScopeReference to reference a given scope."
    },
    "playground_oamApplicationTrait": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of trait definition. This is used to reference to the definition/schema of the Trait. For one type of trait, there could be only one config/deploy in one component."
        },
        "properties": {
          "type": "object",
          "description": "Properties that can be configured and are exposed by this trait."
        },
        "trait": {
          "type": "object",
          "description": "Trait with the full specification of trait that should be passed to the runtime. This field is mutually exclusive with name and properties. [Legacy]."
        }
      },
      "description": "ApplicationTrait specifies a trait that should be applied to a component."
    },
    "playground_oamComponentSummary": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "images with the images of all associated containers"
        }
      },
      "description": "ComponentSummary defines a summary of the component."
    },
    "playground_oamMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the resource"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations of the resource."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels related to the resource."
        },
        "uid": {
          "type": "string",
          "title": "UID is the unique in time and space value for this object. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "creation_timestamp": {
          "type": "string",
          "description": "CreationTimestamp with the server time when the object was created.\nIt is represented in RFC3339 form and is in UTC."
        }
      },
      "description": "Metadata associated with a kubernetes entity."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
