// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.2
// source: playground-apps/entities.proto

package grpc_playground_apps_go

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	grpc_playground_oam3_go "github.com/napptive/grpc-playground-oam3-go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ComponentStatus defines the status of a component associated with an application configuration.
type ComponentStatus int32

const (
	// Unknown with an undetermined status
	ComponentStatus_UNKNOWN ComponentStatus = 0
	// OK signals that all the replicas of the component are running. Notice that the number of replicas may be
	// specified in a trait.
	ComponentStatus_OK ComponentStatus = 1
	// WARNING signals that some of the replicas of the component are running but some remain. This could mean that either
	// the replicas are being launched, or an error prevents the creation of the required replicas.
	ComponentStatus_WARNING ComponentStatus = 2
	// RUNNING signals that all the replicas of the component are running. Notice that the number of replicas may be
	// specified in a trait.
	ComponentStatus_RUNNING ComponentStatus = 3
	// TERMINATED All the task in a job are terminated
	ComponentStatus_TERMINATED ComponentStatus = 4
	// SCHEDULED a cronJob component is waiting to execute the jobs
	ComponentStatus_SCHEDULED ComponentStatus = 5
	// ERROR signals that there has been an error on a component.
	ComponentStatus_ERROR ComponentStatus = 6
	// STOPPED when the component is stopped
	ComponentStatus_STOPPED ComponentStatus = 7
)

// Enum value maps for ComponentStatus.
var (
	ComponentStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "WARNING",
		3: "RUNNING",
		4: "TERMINATED",
		5: "SCHEDULED",
		6: "ERROR",
		7: "STOPPED",
	}
	ComponentStatus_value = map[string]int32{
		"UNKNOWN":    0,
		"OK":         1,
		"WARNING":    2,
		"RUNNING":    3,
		"TERMINATED": 4,
		"SCHEDULED":  5,
		"ERROR":      6,
		"STOPPED":    7,
	}
)

func (x ComponentStatus) Enum() *ComponentStatus {
	p := new(ComponentStatus)
	*p = x
	return p
}

func (x ComponentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[0].Descriptor()
}

func (ComponentStatus) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[0]
}

func (x ComponentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentStatus.Descriptor instead.
func (ComponentStatus) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{0}
}

// AppStatus defines the status of an application.
type AppStatus int32

const (
	// Unknown with an undetermined status
	AppStatus_APP_UNKNOWN AppStatus = 0
	// AppOk signals that are elements of a given application are running.
	// We need OK status to be compatible with OAM2
	AppStatus_APP_OK AppStatus = 1
	// AppWarning signals that some of the elements of an application are not running.
	AppStatus_APP_WARNING AppStatus = 2
	// AppRunning signals that are elements of a given application are running.
	AppStatus_APP_RUNNING AppStatus = 3
	// AppTerminated when an application without deployments neither statefulsets, only workflow and/or jobs terminated
	AppStatus_APP_TERMINATED AppStatus = 4
	// AppSuspended when the workflow is suspended waiting for a manual relaunch
	AppStatus_APP_SUSPENDED AppStatus = 5
	// AppScheduled when an application with cronJobs are waiting to execute the jobs
	AppStatus_APP_SCHEDULED AppStatus = 6
	// AppError signals that the application is on an error state.
	AppStatus_APP_ERROR AppStatus = 7
	// AppStopped signals that all the application components are stopped
	AppStatus_APP_STOPPED AppStatus = 8
)

// Enum value maps for AppStatus.
var (
	AppStatus_name = map[int32]string{
		0: "APP_UNKNOWN",
		1: "APP_OK",
		2: "APP_WARNING",
		3: "APP_RUNNING",
		4: "APP_TERMINATED",
		5: "APP_SUSPENDED",
		6: "APP_SCHEDULED",
		7: "APP_ERROR",
		8: "APP_STOPPED",
	}
	AppStatus_value = map[string]int32{
		"APP_UNKNOWN":    0,
		"APP_OK":         1,
		"APP_WARNING":    2,
		"APP_RUNNING":    3,
		"APP_TERMINATED": 4,
		"APP_SUSPENDED":  5,
		"APP_SCHEDULED":  6,
		"APP_ERROR":      7,
		"APP_STOPPED":    8,
	}
)

func (x AppStatus) Enum() *AppStatus {
	p := new(AppStatus)
	*p = x
	return p
}

func (x AppStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[1].Descriptor()
}

func (AppStatus) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[1]
}

func (x AppStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppStatus.Descriptor instead.
func (AppStatus) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{1}
}

// RepoType with the repository (GITHUB and GitLab for now)
type RepoType int32

const (
	RepoType_UNKNOWN_REPO RepoType = 0
	// GIT repository
	RepoType_GIT RepoType = 1
)

// Enum value maps for RepoType.
var (
	RepoType_name = map[int32]string{
		0: "UNKNOWN_REPO",
		1: "GIT",
	}
	RepoType_value = map[string]int32{
		"UNKNOWN_REPO": 0,
		"GIT":          1,
	}
)

func (x RepoType) Enum() *RepoType {
	p := new(RepoType)
	*p = x
	return p
}

func (x RepoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepoType) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[2].Descriptor()
}

func (RepoType) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[2]
}

func (x RepoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepoType.Descriptor instead.
func (RepoType) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{2}
}

// Language with the language with which the application is implemented
type AppLanguage int32

const (
	AppLanguage_AUTO_DISCOVER AppLanguage = 0
	AppLanguage_GOLANG        AppLanguage = 1
	AppLanguage_PYTHON        AppLanguage = 2
	AppLanguage_NODEJS        AppLanguage = 3
	AppLanguage_STATIC        AppLanguage = 4
)

// Enum value maps for AppLanguage.
var (
	AppLanguage_name = map[int32]string{
		0: "AUTO_DISCOVER",
		1: "GOLANG",
		2: "PYTHON",
		3: "NODEJS",
		4: "STATIC",
	}
	AppLanguage_value = map[string]int32{
		"AUTO_DISCOVER": 0,
		"GOLANG":        1,
		"PYTHON":        2,
		"NODEJS":        3,
		"STATIC":        4,
	}
)

func (x AppLanguage) Enum() *AppLanguage {
	p := new(AppLanguage)
	*p = x
	return p
}

func (x AppLanguage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppLanguage) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[3].Descriptor()
}

func (AppLanguage) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[3]
}

func (x AppLanguage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppLanguage.Descriptor instead.
func (AppLanguage) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{3}
}

type DeploySource int32

const (
	DeploySource_UNKNOWN_DEPLOY_SOURCE DeploySource = 0
	// DeployFromType_FromData to indicate the deploy request contains the application files
	DeploySource_FROM_DATA DeploySource = 1
	// DeployFromType_FromRepo to indicate the deploy request contains the repo url where the application is
	DeploySource_FROM_REPO DeploySource = 2
)

// Enum value maps for DeploySource.
var (
	DeploySource_name = map[int32]string{
		0: "UNKNOWN_DEPLOY_SOURCE",
		1: "FROM_DATA",
		2: "FROM_REPO",
	}
	DeploySource_value = map[string]int32{
		"UNKNOWN_DEPLOY_SOURCE": 0,
		"FROM_DATA":             1,
		"FROM_REPO":             2,
	}
)

func (x DeploySource) Enum() *DeploySource {
	p := new(DeploySource)
	*p = x
	return p
}

func (x DeploySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeploySource) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[4].Descriptor()
}

func (DeploySource) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[4]
}

func (x DeploySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeploySource.Descriptor instead.
func (DeploySource) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{4}
}

// AppDataType to indicate if the data is a tgz or a YAML
type AppDataType int32

const (
	AppDataType_UNKNOWN_FORMAT AppDataType = 0
	AppDataType_TGZ            AppDataType = 1
	AppDataType_YAML           AppDataType = 2
)

// Enum value maps for AppDataType.
var (
	AppDataType_name = map[int32]string{
		0: "UNKNOWN_FORMAT",
		1: "TGZ",
		2: "YAML",
	}
	AppDataType_value = map[string]int32{
		"UNKNOWN_FORMAT": 0,
		"TGZ":            1,
		"YAML":           2,
	}
)

func (x AppDataType) Enum() *AppDataType {
	p := new(AppDataType)
	*p = x
	return p
}

func (x AppDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_playground_apps_entities_proto_enumTypes[5].Descriptor()
}

func (AppDataType) Type() protoreflect.EnumType {
	return &file_playground_apps_entities_proto_enumTypes[5]
}

func (x AppDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppDataType.Descriptor instead.
func (AppDataType) EnumDescriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{5}
}

// Application top level entity.
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AppId with the application identifier.
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Name of the app.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// VisualId contains a hash unique to the instance for representation purposes.
	VisualId string `protobuf:"bytes,3,opt,name=visual_id,json=visualId,proto3" json:"visual_id,omitempty"`
	// Status with the name of the overall status of the application.
	Status AppStatus `protobuf:"varint,4,opt,name=status,proto3,enum=playground_apps.AppStatus" json:"status,omitempty"`
	// Description of the application.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Version of the application
	Version string `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	// ComponentStatus with a map of the associated component status.
	ComponentStatus map[string]ComponentStatus `protobuf:"bytes,7,rep,name=component_status,json=componentStatus,proto3" json:"component_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=playground_apps.ComponentStatus"`
	// Instance of the linked application configuration (v2 or v3 instance)
	//
	// Types that are assignable to Instance:
	//	*Application_V3
	Instance isApplication_Instance `protobuf_oneof:"instance"`
	// StatusName with the string representation of the status enum.
	StatusName string `protobuf:"bytes,10,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// ComponentStatusName with the string representation of the component status.
	ComponentStatusName map[string]string `protobuf:"bytes,11,rep,name=component_status_name,json=componentStatusName,proto3" json:"component_status_name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ComponentIngresses with a map associating component name with the list of associated ingresses.
	ComponentIngresses map[string]*IngressList `protobuf:"bytes,12,rep,name=component_ingresses,json=componentIngresses,proto3" json:"component_ingresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ErrorMessages with all the error messages in case of application status is error
	ErrorMessages []string `protobuf:"bytes,13,rep,name=error_messages,json=errorMessages,proto3" json:"error_messages,omitempty"`
	// InstanceYAML with the YAML representation of the referenced instance.
	InstanceYaml string `protobuf:"bytes,14,opt,name=instance_yaml,json=instanceYaml,proto3" json:"instance_yaml,omitempty"`
	// InstanceJSON with the JSON representation of the referenced instance.
	InstanceJson string `protobuf:"bytes,15,opt,name=instance_json,json=instanceJson,proto3" json:"instance_json,omitempty"`
	// ComponentSummary with a components and their replicas
	ComponentSummary []*ComponentSummary `protobuf:"bytes,16,rep,name=component_summary,json=componentSummary,proto3" json:"component_summary,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetVisualId() string {
	if x != nil {
		return x.VisualId
	}
	return ""
}

func (x *Application) GetStatus() AppStatus {
	if x != nil {
		return x.Status
	}
	return AppStatus_APP_UNKNOWN
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetComponentStatus() map[string]ComponentStatus {
	if x != nil {
		return x.ComponentStatus
	}
	return nil
}

func (m *Application) GetInstance() isApplication_Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (x *Application) GetV3() *grpc_playground_oam3_go.Application {
	if x, ok := x.GetInstance().(*Application_V3); ok {
		return x.V3
	}
	return nil
}

func (x *Application) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Application) GetComponentStatusName() map[string]string {
	if x != nil {
		return x.ComponentStatusName
	}
	return nil
}

func (x *Application) GetComponentIngresses() map[string]*IngressList {
	if x != nil {
		return x.ComponentIngresses
	}
	return nil
}

func (x *Application) GetErrorMessages() []string {
	if x != nil {
		return x.ErrorMessages
	}
	return nil
}

func (x *Application) GetInstanceYaml() string {
	if x != nil {
		return x.InstanceYaml
	}
	return ""
}

func (x *Application) GetInstanceJson() string {
	if x != nil {
		return x.InstanceJson
	}
	return ""
}

func (x *Application) GetComponentSummary() []*ComponentSummary {
	if x != nil {
		return x.ComponentSummary
	}
	return nil
}

type isApplication_Instance interface {
	isApplication_Instance()
}

type Application_V3 struct {
	// V3 with an OAM3 application
	V3 *grpc_playground_oam3_go.Application `protobuf:"bytes,9,opt,name=v3,proto3,oneof"`
}

func (*Application_V3) isApplication_Instance() {}

// ComponentSummary with the information a component
// for now only replicas and AvailableStop info
// TODO: Add Status, ingress and images
type ComponentSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ComponentName with the name of the components
	ComponentName string `protobuf:"bytes,1,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// Replicas with the number of the replicas (-1 if the replicate operation is not available for the component)
	Replicas int32 `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// SupportsOpScale with a flag to indicate if the scale operation is available for the component
	SupportsOpScale bool `protobuf:"varint,3,opt,name=supports_op_scale,json=supportsOpScale,proto3" json:"supports_op_scale,omitempty"`
	// SupportsOpStop with a flag to indicate if the stop operation is available for the component
	SupportsOpStop bool `protobuf:"varint,4,opt,name=supports_op_stop,json=supportsOpStop,proto3" json:"supports_op_stop,omitempty"`
}

func (x *ComponentSummary) Reset() {
	*x = ComponentSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentSummary) ProtoMessage() {}

func (x *ComponentSummary) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentSummary.ProtoReflect.Descriptor instead.
func (*ComponentSummary) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentSummary) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *ComponentSummary) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ComponentSummary) GetSupportsOpScale() bool {
	if x != nil {
		return x.SupportsOpScale
	}
	return false
}

func (x *ComponentSummary) GetSupportsOpStop() bool {
	if x != nil {
		return x.SupportsOpStop
	}
	return false
}

// IngressInfo with the relevant information about an ingress.
type IngressInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL where the application is accessible.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *IngressInfo) Reset() {
	*x = IngressInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressInfo) ProtoMessage() {}

func (x *IngressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressInfo.ProtoReflect.Descriptor instead.
func (*IngressInfo) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{2}
}

func (x *IngressInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// IngressList with a list of ingresses.
type IngressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ParentComponentName with the name of the component the ingress is attached to.
	ParentComponentName string `protobuf:"bytes,1,opt,name=parent_component_name,json=parentComponentName,proto3" json:"parent_component_name,omitempty"`
	// Ingresses with the list of ingresses.
	Ingresses []*IngressInfo `protobuf:"bytes,2,rep,name=ingresses,proto3" json:"ingresses,omitempty"`
}

func (x *IngressList) Reset() {
	*x = IngressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngressList) ProtoMessage() {}

func (x *IngressList) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngressList.ProtoReflect.Descriptor instead.
func (*IngressList) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{3}
}

func (x *IngressList) GetParentComponentName() string {
	if x != nil {
		return x.ParentComponentName
	}
	return ""
}

func (x *IngressList) GetIngresses() []*IngressInfo {
	if x != nil {
		return x.Ingresses
	}
	return nil
}

// AppInfoRequest with the information required to ask for an application
type AppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as
	// <account_name>/<env_name>.
	EnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=environment_qualified_name,json=environmentQualifiedName,proto3" json:"environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// IncludeYAMLConversion determines if the raw YAML representation is also included.
	IncludeYamlConversion bool `protobuf:"varint,5,opt,name=include_yaml_conversion,json=includeYamlConversion,proto3" json:"include_yaml_conversion,omitempty"`
	// IncludeJSONConversion determines if the raw JSON representation is also included.
	IncludeJsonConversion bool `protobuf:"varint,6,opt,name=include_json_conversion,json=includeJsonConversion,proto3" json:"include_json_conversion,omitempty"`
}

func (x *AppInfoRequest) Reset() {
	*x = AppInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoRequest) ProtoMessage() {}

func (x *AppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoRequest.ProtoReflect.Descriptor instead.
func (*AppInfoRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{4}
}

func (x *AppInfoRequest) GetEnvironmentQualifiedName() string {
	if x != nil {
		return x.EnvironmentQualifiedName
	}
	return ""
}

func (x *AppInfoRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AppInfoRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *AppInfoRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *AppInfoRequest) GetIncludeYamlConversion() bool {
	if x != nil {
		return x.IncludeYamlConversion
	}
	return false
}

func (x *AppInfoRequest) GetIncludeJsonConversion() bool {
	if x != nil {
		return x.IncludeJsonConversion
	}
	return false
}

// AppSummaryListResponse with a subset of applications.
type AppSummaryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entries in the returned page.
	Entries []*AppSummary `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// From indicates the index of the first entry returned.
	From int32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	// To indicates the index of the second entry returned.
	To int32 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AppSummaryListResponse) Reset() {
	*x = AppSummaryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSummaryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSummaryListResponse) ProtoMessage() {}

func (x *AppSummaryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSummaryListResponse.ProtoReflect.Descriptor instead.
func (*AppSummaryListResponse) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{5}
}

func (x *AppSummaryListResponse) GetEntries() []*AppSummary {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppSummaryListResponse) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *AppSummaryListResponse) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

// AppSummary with a summary of an application.
type AppSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AppId with the application identifier.
	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// Name of the app.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// VisualId contains a hash unique to the instance for representation purposes.
	VisualId string `protobuf:"bytes,3,opt,name=visual_id,json=visualId,proto3" json:"visual_id,omitempty"`
	// Status with the name of the overall status of the application.
	Status AppStatus `protobuf:"varint,4,opt,name=status,proto3,enum=playground_apps.AppStatus" json:"status,omitempty"`
	// With the status as string
	StatusName      string                     `protobuf:"bytes,5,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	ComponentStatus map[string]ComponentStatus `protobuf:"bytes,6,rep,name=component_status,json=componentStatus,proto3" json:"component_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=playground_apps.ComponentStatus"`
	// ComponentStatusName with the string representation of the component status.
	ComponentStatusName map[string]string `protobuf:"bytes,7,rep,name=component_status_name,json=componentStatusName,proto3" json:"component_status_name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// ComponentSummary with a components and their replicas
	ComponentSummary []*ComponentSummary `protobuf:"bytes,8,rep,name=component_summary,json=componentSummary,proto3" json:"component_summary,omitempty"`
}

func (x *AppSummary) Reset() {
	*x = AppSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSummary) ProtoMessage() {}

func (x *AppSummary) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSummary.ProtoReflect.Descriptor instead.
func (*AppSummary) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{6}
}

func (x *AppSummary) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppSummary) GetVisualId() string {
	if x != nil {
		return x.VisualId
	}
	return ""
}

func (x *AppSummary) GetStatus() AppStatus {
	if x != nil {
		return x.Status
	}
	return AppStatus_APP_UNKNOWN
}

func (x *AppSummary) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *AppSummary) GetComponentStatus() map[string]ComponentStatus {
	if x != nil {
		return x.ComponentStatus
	}
	return nil
}

func (x *AppSummary) GetComponentStatusName() map[string]string {
	if x != nil {
		return x.ComponentStatusName
	}
	return nil
}

func (x *AppSummary) GetComponentSummary() []*ComponentSummary {
	if x != nil {
		return x.ComponentSummary
	}
	return nil
}

type ApplicationFromRepoConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoType RepoType `protobuf:"varint,1,opt,name=repo_type,json=repoType,proto3,enum=playground_apps.RepoType" json:"repo_type,omitempty"`
	// RepoConfig with the repo configuration
	// RepoUrl with the url where the GitHubRepo is
	RepoUrl string `protobuf:"bytes,2,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// RepoUsername with the repository username. Required if the repository is private
	RepoUsername string `protobuf:"bytes,3,opt,name=repo_username,json=repoUsername,proto3" json:"repo_username,omitempty"`
	// RepoPat with a personal access token. Required if the repository is public
	RepoPat string `protobuf:"bytes,4,opt,name=repo_pat,json=repoPat,proto3" json:"repo_pat,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,5,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// MainPath with the path of the main file
	MainPath string `protobuf:"bytes,6,opt,name=main_path,json=mainPath,proto3" json:"main_path,omitempty"`
	// Language with the application language
	Language AppLanguage `protobuf:"varint,7,opt,name=language,proto3,enum=playground_apps.AppLanguage" json:"language,omitempty"`
	// Envs with the application environment variables
	Envs map[string]string `protobuf:"bytes,8,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Ports with the ports to be exposed
	Ports []int32 `protobuf:"varint,9,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	// IngressPorts with the port where an ingress is required
	IngressPorts []int32 `protobuf:"varint,10,rep,packed,name=ingress_ports,json=ingressPorts,proto3" json:"ingress_ports,omitempty"`
	// ExecArgs with a array with arguments required to run the application
	ExecArgs []string `protobuf:"bytes,11,rep,name=exec_args,json=execArgs,proto3" json:"exec_args,omitempty"`
}

func (x *ApplicationFromRepoConfiguration) Reset() {
	*x = ApplicationFromRepoConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationFromRepoConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationFromRepoConfiguration) ProtoMessage() {}

func (x *ApplicationFromRepoConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationFromRepoConfiguration.ProtoReflect.Descriptor instead.
func (*ApplicationFromRepoConfiguration) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationFromRepoConfiguration) GetRepoType() RepoType {
	if x != nil {
		return x.RepoType
	}
	return RepoType_UNKNOWN_REPO
}

func (x *ApplicationFromRepoConfiguration) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *ApplicationFromRepoConfiguration) GetRepoUsername() string {
	if x != nil {
		return x.RepoUsername
	}
	return ""
}

func (x *ApplicationFromRepoConfiguration) GetRepoPat() string {
	if x != nil {
		return x.RepoPat
	}
	return ""
}

func (x *ApplicationFromRepoConfiguration) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ApplicationFromRepoConfiguration) GetMainPath() string {
	if x != nil {
		return x.MainPath
	}
	return ""
}

func (x *ApplicationFromRepoConfiguration) GetLanguage() AppLanguage {
	if x != nil {
		return x.Language
	}
	return AppLanguage_AUTO_DISCOVER
}

func (x *ApplicationFromRepoConfiguration) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *ApplicationFromRepoConfiguration) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ApplicationFromRepoConfiguration) GetIngressPorts() []int32 {
	if x != nil {
		return x.IngressPorts
	}
	return nil
}

func (x *ApplicationFromRepoConfiguration) GetExecArgs() []string {
	if x != nil {
		return x.ExecArgs
	}
	return nil
}

// DeployApplicationResponse with the response of a deploy operation
type DeployApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentName with the name of the environment
	EnvironmentName string `protobuf:"bytes,1,opt,name=environment_name,json=environmentName,proto3" json:"environment_name,omitempty"`
	// AccountName with the name of the account
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// ApplicationName with the name of the application deployed
	ApplicationName string `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Message with the operation message
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeployApplicationResponse) Reset() {
	*x = DeployApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployApplicationResponse) ProtoMessage() {}

func (x *DeployApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployApplicationResponse.ProtoReflect.Descriptor instead.
func (*DeployApplicationResponse) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{8}
}

func (x *DeployApplicationResponse) GetEnvironmentName() string {
	if x != nil {
		return x.EnvironmentName
	}
	return ""
}

func (x *DeployApplicationResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *DeployApplicationResponse) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *DeployApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// DeployApplicationRequest with the information required to send a
// deploy request.
type DeployApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DeployFrom to indicate the deploy source
	DeployFrom DeploySource `protobuf:"varint,1,opt,name=deploy_from,json=deployFrom,proto3,enum=playground_apps.DeploySource" json:"deploy_from,omitempty"`
	// ApplicationDataType with the type of the data received in application_data field
	ApplicationDataType AppDataType `protobuf:"varint,2,opt,name=application_data_type,json=applicationDataType,proto3,enum=playground_apps.AppDataType" json:"application_data_type,omitempty"`
	// ApplicationData with the compressed application descriptors. The data must
	// be compressed as tgz.
	ApplicationData []byte `protobuf:"bytes,3,opt,name=application_data,json=applicationData,proto3" json:"application_data,omitempty"`
	// TargetEnvironmentQualifiedName specifying the target environment in the user
	// account as account_name/env_name.
	TargetEnvironmentQualifiedName string `protobuf:"bytes,4,opt,name=target_environment_qualified_name,json=targetEnvironmentQualifiedName,proto3" json:"target_environment_qualified_name,omitempty"`
	// InstanceConfiguration with the configuration which the application will be deployed
	// indexed by the original application name. This approach enables the catalog to support
	// application packages that deploy more than one application.
	InstanceConfiguration map[string]*ApplicationInstanceConfiguration `protobuf:"bytes,5,rep,name=instance_configuration,json=instanceConfiguration,proto3" json:"instance_configuration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// RepoConfig with the configuration required to deploy an application from Repository
	RepoConf *ApplicationFromRepoConfiguration `protobuf:"bytes,6,opt,name=repo_conf,json=repoConf,proto3" json:"repo_conf,omitempty"`
}

func (x *DeployApplicationRequest) Reset() {
	*x = DeployApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployApplicationRequest) ProtoMessage() {}

func (x *DeployApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployApplicationRequest.ProtoReflect.Descriptor instead.
func (*DeployApplicationRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{9}
}

func (x *DeployApplicationRequest) GetDeployFrom() DeploySource {
	if x != nil {
		return x.DeployFrom
	}
	return DeploySource_UNKNOWN_DEPLOY_SOURCE
}

func (x *DeployApplicationRequest) GetApplicationDataType() AppDataType {
	if x != nil {
		return x.ApplicationDataType
	}
	return AppDataType_UNKNOWN_FORMAT
}

func (x *DeployApplicationRequest) GetApplicationData() []byte {
	if x != nil {
		return x.ApplicationData
	}
	return nil
}

func (x *DeployApplicationRequest) GetTargetEnvironmentQualifiedName() string {
	if x != nil {
		return x.TargetEnvironmentQualifiedName
	}
	return ""
}

func (x *DeployApplicationRequest) GetInstanceConfiguration() map[string]*ApplicationInstanceConfiguration {
	if x != nil {
		return x.InstanceConfiguration
	}
	return nil
}

func (x *DeployApplicationRequest) GetRepoConf() *ApplicationFromRepoConfiguration {
	if x != nil {
		return x.RepoConf
	}
	return nil
}

// RemoveApplicationRequest to remove an application instance.
type RemoveApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TargetEnvironmentQualifiedName specifying the target environment in the user
	// account as account_name/env_name.
	TargetEnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=target_environment_qualified_name,json=targetEnvironmentQualifiedName,proto3" json:"target_environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName to be removed.
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
}

func (x *RemoveApplicationRequest) Reset() {
	*x = RemoveApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveApplicationRequest) ProtoMessage() {}

func (x *RemoveApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveApplicationRequest.ProtoReflect.Descriptor instead.
func (*RemoveApplicationRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveApplicationRequest) GetTargetEnvironmentQualifiedName() string {
	if x != nil {
		return x.TargetEnvironmentQualifiedName
	}
	return ""
}

func (x *RemoveApplicationRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RemoveApplicationRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *RemoveApplicationRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

// ApplicationInstanceConfiguration with the configuration with which the application will be deployed
type ApplicationInstanceConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApplicationName with the new name for the application instance. If empty, the default name will be used.
	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// SpecComponentsRaw with the component specification in yaml format (parameters, traits, etc.). This
	// value will overwrite the spec.components one of the application if not empty. The default specification
	// will be used otherwise.
	SpecComponentsRaw string `protobuf:"bytes,2,opt,name=spec_components_raw,json=specComponentsRaw,proto3" json:"spec_components_raw,omitempty"`
}

func (x *ApplicationInstanceConfiguration) Reset() {
	*x = ApplicationInstanceConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationInstanceConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationInstanceConfiguration) ProtoMessage() {}

func (x *ApplicationInstanceConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationInstanceConfiguration.ProtoReflect.Descriptor instead.
func (*ApplicationInstanceConfiguration) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationInstanceConfiguration) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ApplicationInstanceConfiguration) GetSpecComponentsRaw() string {
	if x != nil {
		return x.SpecComponentsRaw
	}
	return ""
}

// LogRequest with the information required to ask for application logs
type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as
	// <account_name>/<env_name>.
	EnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=environment_qualified_name,json=environmentQualifiedName,proto3" json:"environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	//ComponentName with the name of the component to filter logs
	ComponentName string `protobuf:"bytes,5,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// SinceNano with the timestamp time in nanoseconds from which the logs are requested
	SinceNano int64 `protobuf:"varint,6,opt,name=since_nano,json=sinceNano,proto3" json:"since_nano,omitempty"`
	// CleanLogs with a flag to remove color ANSI codes in the logs
	CleanLogs bool `protobuf:"varint,7,opt,name=clean_logs,json=cleanLogs,proto3" json:"clean_logs,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{12}
}

func (x *LogRequest) GetEnvironmentQualifiedName() string {
	if x != nil {
		return x.EnvironmentQualifiedName
	}
	return ""
}

func (x *LogRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *LogRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *LogRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *LogRequest) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *LogRequest) GetSinceNano() int64 {
	if x != nil {
		return x.SinceNano
	}
	return 0
}

func (x *LogRequest) GetCleanLogs() bool {
	if x != nil {
		return x.CleanLogs
	}
	return false
}

// ApplicationLogs
type ApplicationLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Timestamp of the last entry in the log
	LastEntryNano int64 `protobuf:"varint,2,opt,name=last_entry_nano,json=lastEntryNano,proto3" json:"last_entry_nano,omitempty"`
	// Logs with the application logs
	Logs []*LogEntry `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *ApplicationLogs) Reset() {
	*x = ApplicationLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationLogs) ProtoMessage() {}

func (x *ApplicationLogs) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationLogs.ProtoReflect.Descriptor instead.
func (*ApplicationLogs) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicationLogs) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ApplicationLogs) GetLastEntryNano() int64 {
	if x != nil {
		return x.LastEntryNano
	}
	return 0
}

func (x *ApplicationLogs) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

// LogEntry with a log info
type LogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp with the log timestamp
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// ComponentName with the name of the component
	ComponentName string `protobuf:"bytes,2,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// PodName with the name of the pod
	PodName string `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	// Log with the log content
	Log string `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{14}
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *LogEntry) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *LogEntry) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

// ComponentReplicas with the number of replicas of a component
type ComponentReplicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ComponentName with the name of the component to replicate
	ComponentName string `protobuf:"bytes,1,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	// Replicas with the number of replicas to scale
	Replicas int32 `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *ComponentReplicas) Reset() {
	*x = ComponentReplicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentReplicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentReplicas) ProtoMessage() {}

func (x *ComponentReplicas) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentReplicas.ProtoReflect.Descriptor instead.
func (*ComponentReplicas) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{15}
}

func (x *ComponentReplicas) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *ComponentReplicas) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

// ScaleRequest with the information required to scale an application
type ScaleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as
	// <account_name>/<env_name>.
	EnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=environment_qualified_name,json=environmentQualifiedName,proto3" json:"environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Components with a list of components to scale
	Components []*ComponentReplicas `protobuf:"bytes,5,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *ScaleRequest) Reset() {
	*x = ScaleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleRequest) ProtoMessage() {}

func (x *ScaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleRequest.ProtoReflect.Descriptor instead.
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{16}
}

func (x *ScaleRequest) GetEnvironmentQualifiedName() string {
	if x != nil {
		return x.EnvironmentQualifiedName
	}
	return ""
}

func (x *ScaleRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ScaleRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ScaleRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ScaleRequest) GetComponents() []*ComponentReplicas {
	if x != nil {
		return x.Components
	}
	return nil
}

// StopApplicationComponents with the information required to stop application components
type StopApplicationComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as
	// <account_name>/<env_name>.
	EnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=environment_qualified_name,json=environmentQualifiedName,proto3" json:"environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Components with a list of components to scale
	Components []string `protobuf:"bytes,5,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *StopApplicationComponentsRequest) Reset() {
	*x = StopApplicationComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopApplicationComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopApplicationComponentsRequest) ProtoMessage() {}

func (x *StopApplicationComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopApplicationComponentsRequest.ProtoReflect.Descriptor instead.
func (*StopApplicationComponentsRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{17}
}

func (x *StopApplicationComponentsRequest) GetEnvironmentQualifiedName() string {
	if x != nil {
		return x.EnvironmentQualifiedName
	}
	return ""
}

func (x *StopApplicationComponentsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *StopApplicationComponentsRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *StopApplicationComponentsRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *StopApplicationComponentsRequest) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

type ResumeApplicationComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// EnvironmentQualifiedName (EnvQN) contains both the account name and the environment name as
	// <account_name>/<env_name>.
	EnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=environment_qualified_name,json=environmentQualifiedName,proto3" json:"environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName with the name of the application
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Components with a list of components to scale
	Components []string `protobuf:"bytes,5,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *ResumeApplicationComponentsRequest) Reset() {
	*x = ResumeApplicationComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeApplicationComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeApplicationComponentsRequest) ProtoMessage() {}

func (x *ResumeApplicationComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeApplicationComponentsRequest.ProtoReflect.Descriptor instead.
func (*ResumeApplicationComponentsRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{18}
}

func (x *ResumeApplicationComponentsRequest) GetEnvironmentQualifiedName() string {
	if x != nil {
		return x.EnvironmentQualifiedName
	}
	return ""
}

func (x *ResumeApplicationComponentsRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ResumeApplicationComponentsRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ResumeApplicationComponentsRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ResumeApplicationComponentsRequest) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

// ValidateRepoAccessRequest with the information required to validate if repo is accessible
type ValidateRepoAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RepoType with the repository type (GitHub for now)
	RepoType RepoType `protobuf:"varint,1,opt,name=repo_type,json=repoType,proto3,enum=playground_apps.RepoType" json:"repo_type,omitempty"`
	// RepoConfig with the repo configuration
	// RepoUrl with the url where the GitHubRepo is
	RepoUrl string `protobuf:"bytes,2,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// RepoPat with a personal access token. Required if the repository is private
	RepoPat string `protobuf:"bytes,3,opt,name=repo_pat,json=repoPat,proto3" json:"repo_pat,omitempty"`
}

func (x *ValidateRepoAccessRequest) Reset() {
	*x = ValidateRepoAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateRepoAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateRepoAccessRequest) ProtoMessage() {}

func (x *ValidateRepoAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateRepoAccessRequest.ProtoReflect.Descriptor instead.
func (*ValidateRepoAccessRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateRepoAccessRequest) GetRepoType() RepoType {
	if x != nil {
		return x.RepoType
	}
	return RepoType_UNKNOWN_REPO
}

func (x *ValidateRepoAccessRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *ValidateRepoAccessRequest) GetRepoPat() string {
	if x != nil {
		return x.RepoPat
	}
	return ""
}

// UpdateApplicationRequest with the information required to update a deployed application
type UpdateApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TargetEnvironmentQualifiedName specifying the target environment in the user
	// account as account_name/env_name.
	TargetEnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=target_environment_qualified_name,json=targetEnvironmentQualifiedName,proto3" json:"target_environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName to be removed.
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// RawYaml with a YAML with the new application (base64 decoded)
	RawYaml string `protobuf:"bytes,5,opt,name=raw_yaml,json=rawYaml,proto3" json:"raw_yaml,omitempty"`
}

func (x *UpdateApplicationRequest) Reset() {
	*x = UpdateApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationRequest) ProtoMessage() {}

func (x *UpdateApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationRequest.ProtoReflect.Descriptor instead.
func (*UpdateApplicationRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateApplicationRequest) GetTargetEnvironmentQualifiedName() string {
	if x != nil {
		return x.TargetEnvironmentQualifiedName
	}
	return ""
}

func (x *UpdateApplicationRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpdateApplicationRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *UpdateApplicationRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *UpdateApplicationRequest) GetRawYaml() string {
	if x != nil {
		return x.RawYaml
	}
	return ""
}

// ResumeWorkflowRequest to resume a workflow application.
type ResumeWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TargetEnvironmentQualifiedName specifying the target environment in the user
	// account as account_name/env_name.
	TargetEnvironmentQualifiedName string `protobuf:"bytes,1,opt,name=target_environment_qualified_name,json=targetEnvironmentQualifiedName,proto3" json:"target_environment_qualified_name,omitempty"`
	// AccountId with the account identifier.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// EnvironmentId with the environment identifier
	EnvironmentId string `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// ApplicationName to be removed.
	ApplicationName string `protobuf:"bytes,4,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
}

func (x *ResumeWorkflowRequest) Reset() {
	*x = ResumeWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_playground_apps_entities_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeWorkflowRequest) ProtoMessage() {}

func (x *ResumeWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playground_apps_entities_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeWorkflowRequest.ProtoReflect.Descriptor instead.
func (*ResumeWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_playground_apps_entities_proto_rawDescGZIP(), []int{21}
}

func (x *ResumeWorkflowRequest) GetTargetEnvironmentQualifiedName() string {
	if x != nil {
		return x.TargetEnvironmentQualifiedName
	}
	return ""
}

func (x *ResumeWorkflowRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ResumeWorkflowRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ResumeWorkflowRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

var File_playground_apps_entities_proto protoreflect.FileDescriptor

var file_playground_apps_entities_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x6c, 0x61, 0x79,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x6f, 0x61, 0x6d, 0x33, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x08, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x0a, 0x02, 0x76, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x61, 0x6d, 0x33, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x02, 0x76, 0x33,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x69, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x13,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x59, 0x61, 0x6d, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x1a, 0x64, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x63, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x6f, 0x70, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x4f, 0x70, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x5f, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4f, 0x70, 0x53, 0x74, 0x6f,
	0x70, 0x22, 0x1f, 0x0a, 0x0b, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x7d, 0x0a, 0x0b, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x22, 0xaf, 0x02, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x79,
	0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x59, 0x61, 0x6d,
	0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xee, 0x04, 0x0a, 0x0a, 0x41, 0x70, 0x70,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x68, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x64, 0x0a, 0x14, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x46, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x04, 0x0a, 0x20, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70,
	0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x50, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x38, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x04,
	0x65, 0x6e, 0x76, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e,
	0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x63,
	0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x65,
	0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae,
	0x01, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xec, 0x04, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x50, 0x0a, 0x15,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x21, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x7b, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x15, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4e, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x1a, 0x7b, 0x0a, 0x1a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdf,
	0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x21, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x7d, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x70,
	0x65, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x61, 0x77, 0x22,
	0xa9, 0x02, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x1a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61,
	0x6e, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x22, 0x7c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22,
	0x56, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x84,
	0x02, 0x0a, 0x20, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x22, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f,
	0x5f, 0x70, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x50, 0x61, 0x74, 0x22, 0x83, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x21, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x79, 0x61, 0x6d,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x72, 0x61, 0x77, 0x59, 0x61, 0x6d, 0x6c, 0x22, 0xdc, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x21, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x77, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x45,
	0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10,
	0x07, 0x2a, 0xa4, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x41, 0x50, 0x50, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x41, 0x50, 0x50, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x5f, 0x53,
	0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x08, 0x2a, 0x25, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x54, 0x10, 0x01, 0x2a,
	0x50, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4c, 0x41, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x44,
	0x45, 0x4a, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x10,
	0x04, 0x2a, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x44, 0x45, 0x50,
	0x4c, 0x4f, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x52, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x47, 0x5a, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x41, 0x4d, 0x4c, 0x10, 0x02,
	0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x61, 0x70, 0x70, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x61, 0x70, 0x70, 0x73, 0x2d, 0x67, 0x6f, 0x3b,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x73, 0x5f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_playground_apps_entities_proto_rawDescOnce sync.Once
	file_playground_apps_entities_proto_rawDescData = file_playground_apps_entities_proto_rawDesc
)

func file_playground_apps_entities_proto_rawDescGZIP() []byte {
	file_playground_apps_entities_proto_rawDescOnce.Do(func() {
		file_playground_apps_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_playground_apps_entities_proto_rawDescData)
	})
	return file_playground_apps_entities_proto_rawDescData
}

var file_playground_apps_entities_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_playground_apps_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_playground_apps_entities_proto_goTypes = []interface{}{
	(ComponentStatus)(0),                       // 0: playground_apps.ComponentStatus
	(AppStatus)(0),                             // 1: playground_apps.AppStatus
	(RepoType)(0),                              // 2: playground_apps.RepoType
	(AppLanguage)(0),                           // 3: playground_apps.AppLanguage
	(DeploySource)(0),                          // 4: playground_apps.DeploySource
	(AppDataType)(0),                           // 5: playground_apps.AppDataType
	(*Application)(nil),                        // 6: playground_apps.Application
	(*ComponentSummary)(nil),                   // 7: playground_apps.ComponentSummary
	(*IngressInfo)(nil),                        // 8: playground_apps.IngressInfo
	(*IngressList)(nil),                        // 9: playground_apps.IngressList
	(*AppInfoRequest)(nil),                     // 10: playground_apps.AppInfoRequest
	(*AppSummaryListResponse)(nil),             // 11: playground_apps.AppSummaryListResponse
	(*AppSummary)(nil),                         // 12: playground_apps.AppSummary
	(*ApplicationFromRepoConfiguration)(nil),   // 13: playground_apps.ApplicationFromRepoConfiguration
	(*DeployApplicationResponse)(nil),          // 14: playground_apps.DeployApplicationResponse
	(*DeployApplicationRequest)(nil),           // 15: playground_apps.DeployApplicationRequest
	(*RemoveApplicationRequest)(nil),           // 16: playground_apps.RemoveApplicationRequest
	(*ApplicationInstanceConfiguration)(nil),   // 17: playground_apps.ApplicationInstanceConfiguration
	(*LogRequest)(nil),                         // 18: playground_apps.LogRequest
	(*ApplicationLogs)(nil),                    // 19: playground_apps.ApplicationLogs
	(*LogEntry)(nil),                           // 20: playground_apps.LogEntry
	(*ComponentReplicas)(nil),                  // 21: playground_apps.ComponentReplicas
	(*ScaleRequest)(nil),                       // 22: playground_apps.ScaleRequest
	(*StopApplicationComponentsRequest)(nil),   // 23: playground_apps.StopApplicationComponentsRequest
	(*ResumeApplicationComponentsRequest)(nil), // 24: playground_apps.ResumeApplicationComponentsRequest
	(*ValidateRepoAccessRequest)(nil),          // 25: playground_apps.ValidateRepoAccessRequest
	(*UpdateApplicationRequest)(nil),           // 26: playground_apps.UpdateApplicationRequest
	(*ResumeWorkflowRequest)(nil),              // 27: playground_apps.ResumeWorkflowRequest
	nil,                                        // 28: playground_apps.Application.ComponentStatusEntry
	nil,                                        // 29: playground_apps.Application.ComponentStatusNameEntry
	nil,                                        // 30: playground_apps.Application.ComponentIngressesEntry
	nil,                                        // 31: playground_apps.AppSummary.ComponentStatusEntry
	nil,                                        // 32: playground_apps.AppSummary.ComponentStatusNameEntry
	nil,                                        // 33: playground_apps.ApplicationFromRepoConfiguration.EnvsEntry
	nil,                                        // 34: playground_apps.DeployApplicationRequest.InstanceConfigurationEntry
	(*grpc_playground_oam3_go.Application)(nil), // 35: playground_oam3.Application
}
var file_playground_apps_entities_proto_depIdxs = []int32{
	1,  // 0: playground_apps.Application.status:type_name -> playground_apps.AppStatus
	28, // 1: playground_apps.Application.component_status:type_name -> playground_apps.Application.ComponentStatusEntry
	35, // 2: playground_apps.Application.v3:type_name -> playground_oam3.Application
	29, // 3: playground_apps.Application.component_status_name:type_name -> playground_apps.Application.ComponentStatusNameEntry
	30, // 4: playground_apps.Application.component_ingresses:type_name -> playground_apps.Application.ComponentIngressesEntry
	7,  // 5: playground_apps.Application.component_summary:type_name -> playground_apps.ComponentSummary
	8,  // 6: playground_apps.IngressList.ingresses:type_name -> playground_apps.IngressInfo
	12, // 7: playground_apps.AppSummaryListResponse.entries:type_name -> playground_apps.AppSummary
	1,  // 8: playground_apps.AppSummary.status:type_name -> playground_apps.AppStatus
	31, // 9: playground_apps.AppSummary.component_status:type_name -> playground_apps.AppSummary.ComponentStatusEntry
	32, // 10: playground_apps.AppSummary.component_status_name:type_name -> playground_apps.AppSummary.ComponentStatusNameEntry
	7,  // 11: playground_apps.AppSummary.component_summary:type_name -> playground_apps.ComponentSummary
	2,  // 12: playground_apps.ApplicationFromRepoConfiguration.repo_type:type_name -> playground_apps.RepoType
	3,  // 13: playground_apps.ApplicationFromRepoConfiguration.language:type_name -> playground_apps.AppLanguage
	33, // 14: playground_apps.ApplicationFromRepoConfiguration.envs:type_name -> playground_apps.ApplicationFromRepoConfiguration.EnvsEntry
	4,  // 15: playground_apps.DeployApplicationRequest.deploy_from:type_name -> playground_apps.DeploySource
	5,  // 16: playground_apps.DeployApplicationRequest.application_data_type:type_name -> playground_apps.AppDataType
	34, // 17: playground_apps.DeployApplicationRequest.instance_configuration:type_name -> playground_apps.DeployApplicationRequest.InstanceConfigurationEntry
	13, // 18: playground_apps.DeployApplicationRequest.repo_conf:type_name -> playground_apps.ApplicationFromRepoConfiguration
	20, // 19: playground_apps.ApplicationLogs.logs:type_name -> playground_apps.LogEntry
	21, // 20: playground_apps.ScaleRequest.components:type_name -> playground_apps.ComponentReplicas
	2,  // 21: playground_apps.ValidateRepoAccessRequest.repo_type:type_name -> playground_apps.RepoType
	0,  // 22: playground_apps.Application.ComponentStatusEntry.value:type_name -> playground_apps.ComponentStatus
	9,  // 23: playground_apps.Application.ComponentIngressesEntry.value:type_name -> playground_apps.IngressList
	0,  // 24: playground_apps.AppSummary.ComponentStatusEntry.value:type_name -> playground_apps.ComponentStatus
	17, // 25: playground_apps.DeployApplicationRequest.InstanceConfigurationEntry.value:type_name -> playground_apps.ApplicationInstanceConfiguration
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_playground_apps_entities_proto_init() }
func file_playground_apps_entities_proto_init() {
	if File_playground_apps_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_playground_apps_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSummaryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationFromRepoConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationInstanceConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentReplicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopApplicationComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeApplicationComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateRepoAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_playground_apps_entities_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_playground_apps_entities_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Application_V3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_playground_apps_entities_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_playground_apps_entities_proto_goTypes,
		DependencyIndexes: file_playground_apps_entities_proto_depIdxs,
		EnumInfos:         file_playground_apps_entities_proto_enumTypes,
		MessageInfos:      file_playground_apps_entities_proto_msgTypes,
	}.Build()
	File_playground_apps_entities_proto = out.File
	file_playground_apps_entities_proto_rawDesc = nil
	file_playground_apps_entities_proto_goTypes = nil
	file_playground_apps_entities_proto_depIdxs = nil
}
